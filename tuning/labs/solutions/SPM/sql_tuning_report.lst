SQL> @report_evolve_tuning.sql
SQL> set echo on
SQL> 
SQL> set long 10000
SQL> 
SQL> select dbms_sqltune.report_tuning_task(:spmtune,'TEXT')
  2   from dual;

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
GENERAL INFORMATION SECTION                                                     
------------------------------------------------------------------------------- 
Tuning Task Name   : TASK_512                                                   
Tuning Task Owner  : SPM                                                        
Workload Type      : Single SQL Statement                                       
Scope              : COMPREHENSIVE                                              
Time Limit(seconds): 1800                                                       
Completion Status  : COMPLETED                                                  
Started at         : 08/12/2010 05:16:16                                        
Completed at       : 08/12/2010 05:16:20                                        
                                                                                
------------------------------------------------------------------------------- 
Schema Name: SPM                                                                
SQL ID     : 8x0vtrft8kkwu                                                      
SQL Text   :  select /*+ USE_NL(s c) FULL(s) FULL(c) */                         
             		   c.cust_id, sum(s.quantity_sold)                               
                               from sh.sales s, sh.customers c                  
                               where s.cust_id = c.cust_id                      
                                     and c.cust_id < 2                          
                               group by c.cust_id                               
                                                                                
                                                                                
------------------------------------------------------------------------------- 
FINDINGS SECTION (2 findings)                                                   
------------------------------------------------------------------------------- 
                                                                                
1- SQL Profile Finding (see explain plans section below)                        

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
--------------------------------------------------------                        
  A potentially better execution plan was found for this statement.             
                                                                                
  Recommendation (estimated benefit: 98.47%)                                    
  ------------------------------------------                                    
  - Consider accepting the recommended SQL profile. A SQL plan baseline         
    corresponding to the plan with the SQL profile will also be created.        
    execute dbms_sqltune.accept_sql_profile(task_name => 'TASK_512',            
            task_owner => 'SPM', replace => TRUE);                              
                                                                                
  Validation results                                                            
  ------------------                                                            
  The SQL profile was tested by executing both its plan and the original plan   
  and measuring their respective execution statistics. A plan may have been     
  only partially executed if the other could be run to completion in less time. 
                                                                                
                           Original Plan  With SQL Profile  % Improved          
                           -------------  ----------------  ----------          
  Completion Status:            COMPLETE          COMPLETE                      
  Elapsed Time(us):              178766               218      99.87 %          
  CPU Time(us):                  177973               200      99.88 %          
  User I/O Time(us):                  0                 0                       
  Buffer Gets:                     2541                39      98.46 %          
  Physical Read Requests:             0                 0                       
  Physical Write Requests:            0                 0                       
  Physical Read Bytes:                0                 0                       
  Physical Write Bytes:               0                 0                       

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
  Rows Processed:                     0                 0                       
  Fetches:                            0                 0                       
  Executions:                         1                 1                       
                                                                                
  Notes                                                                         
  -----                                                                         
  1. The original plan was first executed to warm the buffer cache.             
  2. Statistics for original plan were averaged over next 4 executions.         
  3. The SQL profile plan was first executed to warm the buffer cache.          
  4. Statistics for the SQL profile plan were averaged over next 9 executions.  
                                                                                
2- Index Finding (see explain plans section below)                              
--------------------------------------------------                              
  The execution plan of this statement can be improved by creating one or more  
  indices.                                                                      
                                                                                
  Recommendation (estimated benefit: 90.97%)                                    
  ------------------------------------------                                    
  - Consider running the Access Advisor to improve the physical schema design   
    or creating the recommended index.                                          
    create index SH.IDX$$_02000001 on SH.SALES("CUST_ID");                      
                                                                                
  Rationale                                                                     
  ---------                                                                     
    Creating the recommended indices significantly improves the execution plan  
    of this statement. However, it might be preferable to run "Access Advisor"  
    using a representative SQL workload as opposed to a single statement. This  

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
    will allow to get comprehensive index recommendations which takes into      
    account index maintenance overhead and additional space consumption.        
                                                                                
------------------------------------------------------------------------------- 
EXPLAIN PLANS SECTION                                                           
------------------------------------------------------------------------------- 
                                                                                
1- Original With Adjusted Cost                                                  
------------------------------                                                  
Plan hash value: 4005616876                                                     
                                                                                
--------------------------------------------------------------------------------
-------------------                                                             
| Id  | Operation             | Name      | Rows  | Bytes | Cost (%CPU)| Time   
  | Pstart| Pstop |                                                             
--------------------------------------------------------------------------------
-------------------                                                             
|   0 | SELECT STATEMENT      |           |     1 |    13 |   770   (2)| 00:00:1
3 |       |       |                                                             
|   1 |  HASH GROUP BY        |           |     1 |    13 |   770   (2)| 00:00:1
3 |       |       |                                                             
|   2 |   NESTED LOOPS        |           |     1 |    13 |   769   (2)| 00:00:1
3 |       |       |                                                             
|*  3 |    TABLE ACCESS FULL  | CUSTOMERS |     1 |     5 |   348   (1)| 00:00:0
6 |       |       |                                                             
|   4 |    PARTITION RANGE ALL|           |     1 |     8 |   422   (3)| 00:00:0
7 |     1 |    28 |                                                             

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
|*  5 |     TABLE ACCESS FULL | SALES     |     1 |     8 |   422   (3)| 00:00:0
7 |     1 |    28 |                                                             
--------------------------------------------------------------------------------
-------------------                                                             
                                                                                
Predicate Information (identified by operation id):                             
---------------------------------------------------                             
                                                                                
   3 - filter("C"."CUST_ID"<2)                                                  
   5 - filter("S"."CUST_ID"<2 AND "S"."CUST_ID"="C"."CUST_ID")                  
                                                                                
2- Using SQL Profile                                                            
--------------------                                                            
Plan hash value: 3070788227                                                     
                                                                                
--------------------------------------------------------------------------------
---------------------------------------                                         
| Id  | Operation                            | Name           | Rows  | Bytes | 
Cost (%CPU)| Time     | Pstart| Pstop |                                         
--------------------------------------------------------------------------------
---------------------------------------                                         
|   0 | SELECT STATEMENT                     |                |     1 |    13 | 
   55   (2)| 00:00:01 |       |       |                                         
|   1 |  HASH GROUP BY                       |                |     1 |    13 | 
   55   (2)| 00:00:01 |       |       |                                         
|   2 |   NESTED LOOPS                       |                |     1 |    13 | 
   54   (0)| 00:00:01 |       |       |                                         

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
|   3 |    PARTITION RANGE ALL               |                |     1 |     8 | 
   54   (0)| 00:00:01 |     1 |    28 |                                         
|   4 |     TABLE ACCESS BY LOCAL INDEX ROWID| SALES          |     1 |     8 | 
   54   (0)| 00:00:01 |     1 |    28 |                                         
|   5 |      BITMAP CONVERSION TO ROWIDS     |                |       |       | 
           |          |       |       |                                         
|*  6 |       BITMAP INDEX RANGE SCAN        | SALES_CUST_BIX |       |       | 
           |          |     1 |    28 |                                         
|*  7 |    INDEX UNIQUE SCAN                 | CUSTOMERS_PK   |     1 |     5 | 
    0   (0)| 00:00:01 |       |       |                                         
--------------------------------------------------------------------------------
---------------------------------------                                         
                                                                                
Predicate Information (identified by operation id):                             
---------------------------------------------------                             
                                                                                
   6 - access("S"."CUST_ID"<2)                                                  
       filter("S"."CUST_ID"<2)                                                  
   7 - access("S"."CUST_ID"="C"."CUST_ID")                                      
       filter("C"."CUST_ID"<2)                                                  
                                                                                
3- Using New Indices                                                            
--------------------                                                            
Plan hash value: 2412144301                                                     
                                                                                
--------------------------------------------------------------------------------
---------------------------------------                                         

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
| Id  | Operation                            | Name           | Rows  | Bytes | 
Cost (%CPU)| Time     | Pstart| Pstop |                                         
--------------------------------------------------------------------------------
---------------------------------------                                         
|   0 | SELECT STATEMENT                     |                |     1 |    13 | 
    5   (0)| 00:00:01 |       |       |                                         
|   1 |  SORT GROUP BY NOSORT                |                |     1 |    13 | 
    5   (0)| 00:00:01 |       |       |                                         
|   2 |   NESTED LOOPS                       |                |       |       | 
           |          |       |       |                                         
|   3 |    NESTED LOOPS                      |                |     1 |    13 | 
    5   (0)| 00:00:01 |       |       |                                         
|*  4 |     INDEX RANGE SCAN                 | CUSTOMERS_PK   |     1 |     5 | 
    2   (0)| 00:00:01 |       |       |                                         
|*  5 |     INDEX RANGE SCAN                 | IDX$$_02000001 |     1 |       | 
    2   (0)| 00:00:01 |       |       |                                         
|   6 |    TABLE ACCESS BY GLOBAL INDEX ROWID| SALES          |     1 |     8 | 
    3   (0)| 00:00:01 | ROWID | ROWID |                                         
--------------------------------------------------------------------------------
---------------------------------------                                         
                                                                                
Predicate Information (identified by operation id):                             
---------------------------------------------------                             
                                                                                
   4 - access("C"."CUST_ID"<2)                                                  
   5 - access("S"."CUST_ID"="C"."CUST_ID")                                      
       filter("S"."CUST_ID"<2)                                                  

DBMS_SQLTUNE.REPORT_TUNING_TASK(:SPMTUNE,'TEXT')                                
--------------------------------------------------------------------------------
                                                                                
------------------------------------------------------------------------------- 
                                                                                

SQL> 
SQL> Spool off
